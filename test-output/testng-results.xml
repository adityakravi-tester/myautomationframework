<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="67971" started-at="2021-05-26T20:12:29 IST" finished-at="2021-05-26T20:13:36 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="67971" started-at="2021-05-26T20:12:29 IST" finished-at="2021-05-26T20:13:36 IST">
      <class name="com.servicenow.tests.CreateIncidentTest">
        <test-method status="PASS" signature="setExceDataFile()[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="setExceDataFile" is-config="true" duration-ms="10" started-at="2021-05-26T20:12:29 IST" finished-at="2021-05-26T20:12:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExceDataFile -->
        <test-method status="PASS" signature="setup(java.lang.String, java.lang.String)[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="setup" is-config="true" duration-ms="14043" started-at="2021-05-26T20:12:29 IST" finished-at="2021-05-26T20:12:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCreateIncident(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="testCreateIncident" duration-ms="18446" started-at="2021-05-26T20:12:43 IST" data-provider="setData" finished-at="2021-05-26T20:13:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[incident]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[blue screen of death]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncident -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="tearDown" is-config="true" duration-ms="4184" started-at="2021-05-26T20:13:02 IST" finished-at="2021-05-26T20:13:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.String, java.lang.String)[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="setup" is-config="true" duration-ms="17034" started-at="2021-05-26T20:13:06 IST" finished-at="2021-05-26T20:13:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testCreateIncident(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="testCreateIncident" duration-ms="13380" started-at="2021-05-26T20:13:23 IST" data-provider="setData" finished-at="2021-05-26T20:13:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[incident]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[The following mandatory fields are not filled in: Short description, Caller]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [The following mandatory fields are not filled in: Short description] but found [The following mandatory fields are not filled in: Short description, Caller]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [The following mandatory fields are not filled in: Short description] but found [The following mandatory fields are not filled in: Short description, Caller]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.servicenow.pages.CreateIncidentPage.verifyErrorMessage(CreateIncidentPage.java:45)
at com.servicenow.tests.CreateIncidentTest.testCreateIncident(CreateIncidentTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncident -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="tearDown" is-config="true" duration-ms="215" started-at="2021-05-26T20:13:36 IST" finished-at="2021-05-26T20:13:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterSuite(org.testng.ITestContext)[pri:0, instance:com.servicenow.tests.CreateIncidentTest@69b0fd6f]" name="afterSuite" is-config="true" duration-ms="5" started-at="2021-05-26T20:13:37 IST" finished-at="2021-05-26T20:13:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@12028586]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.servicenow.tests.CreateIncidentTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
